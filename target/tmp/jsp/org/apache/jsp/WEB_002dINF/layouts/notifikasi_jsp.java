/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.3.v20170317
 * Generated at: 2017-04-18 14:17:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.layouts;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class notifikasi_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(10);
    _jspx_dependants.put("/WEB-INF/layouts/taglib.jsp", Long.valueOf(1492264193000L));
    _jspx_dependants.put("jar:file:/home/edmaputra/coding/mavenrepository/jstl/jstl/1.2/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("file:/home/edmaputra/coding/mavenrepository/org/springframework/security/spring-security-taglibs/4.2.2.RELEASE/spring-security-taglibs-4.2.2.RELEASE.jar", Long.valueOf(1489664022000L));
    _jspx_dependants.put("jar:file:/home/edmaputra/coding/mavenrepository/org/springframework/security/spring-security-taglibs/4.2.2.RELEASE/spring-security-taglibs-4.2.2.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1488410132000L));
    _jspx_dependants.put("file:/home/edmaputra/coding/mavenrepository/jstl/jstl/1.2/jstl-1.2.jar", Long.valueOf(1488968039000L));
    _jspx_dependants.put("jar:file:/home/edmaputra/coding/mavenrepository/jstl/jstl/1.2/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/home/edmaputra/coding/mavenrepository/org/springframework/spring-webmvc/4.1.5.RELEASE/spring-webmvc-4.1.5.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1424371676000L));
    _jspx_dependants.put("jar:file:/home/edmaputra/coding/mavenrepository/jstl/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("file:/home/edmaputra/coding/mavenrepository/org/springframework/spring-webmvc/4.1.5.RELEASE/spring-webmvc-4.1.5.RELEASE.jar", Long.valueOf(1488968156000L));
    _jspx_dependants.put("jar:file:/home/edmaputra/coding/mavenrepository/org/springframework/spring-webmvc/4.1.5.RELEASE/spring-webmvc-4.1.5.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1424371676000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('	');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<li class=\"dropdown\"><a data-toggle=\"dropdown\"\n");
      out.write("\tclass=\"dropdown-toggle\" href=\"index.html#\"> <i class=\"fa fa-tasks\"></i>\n");
      out.write("\t\t<span class=\"badge bg-theme\">4</span>\n");
      out.write("</a>\n");
      out.write("\t<ul class=\"dropdown-menu extended tasks-bar\">\n");
      out.write("\t\t<div class=\"notify-arrow notify-arrow-green\"></div>\n");
      out.write("\t\t<li>\n");
      out.write("\t\t\t<p class=\"green\">You have 4 pending tasks</p>\n");
      out.write("\t\t</li>\n");
      out.write("\t\t<li><a href=\"index.html#\">\n");
      out.write("\t\t\t\t<div class=\"task-info\">\n");
      out.write("\t\t\t\t\t<div class=\"desc\">DashGum Admin Panel</div>\n");
      out.write("\t\t\t\t\t<div class=\"percent\">40%</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"progress progress-striped\">\n");
      out.write("\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n");
      out.write("\t\t\t\t\t\taria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 40%\">\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">40% Complete (success)</span>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t</a></li>\n");
      out.write("\t\t<li><a href=\"index.html#\">\n");
      out.write("\t\t\t\t<div class=\"task-info\">\n");
      out.write("\t\t\t\t\t<div class=\"desc\">Database Update</div>\n");
      out.write("\t\t\t\t\t<div class=\"percent\">60%</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"progress progress-striped\">\n");
      out.write("\t\t\t\t\t<div class=\"progress-bar progress-bar-warning\" role=\"progressbar\"\n");
      out.write("\t\t\t\t\t\taria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 60%\">\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">60% Complete (warning)</span>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t</a></li>\n");
      out.write("\t\t<li><a href=\"index.html#\">\n");
      out.write("\t\t\t\t<div class=\"task-info\">\n");
      out.write("\t\t\t\t\t<div class=\"desc\">Product Development</div>\n");
      out.write("\t\t\t\t\t<div class=\"percent\">80%</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"progress progress-striped\">\n");
      out.write("\t\t\t\t\t<div class=\"progress-bar progress-bar-info\" role=\"progressbar\"\n");
      out.write("\t\t\t\t\t\taria-valuenow=\"80\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 80%\">\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">80% Complete</span>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t</a></li>\n");
      out.write("\t\t<li><a href=\"index.html#\">\n");
      out.write("\t\t\t\t<div class=\"task-info\">\n");
      out.write("\t\t\t\t\t<div class=\"desc\">Payments Sent</div>\n");
      out.write("\t\t\t\t\t<div class=\"percent\">70%</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"progress progress-striped\">\n");
      out.write("\t\t\t\t\t<div class=\"progress-bar progress-bar-danger\" role=\"progressbar\"\n");
      out.write("\t\t\t\t\t\taria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 70%\">\n");
      out.write("\t\t\t\t\t\t<span class=\"sr-only\">70% Complete (Important)</span>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t</a></li>\n");
      out.write("\t\t<li class=\"external\"><a href=\"#\">See All Tasks</a></li>\n");
      out.write("\t</ul>\n");
      out.write("</li>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
